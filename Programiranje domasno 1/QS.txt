///Quick Sort

#include <bits/stdc++.h>

using namespace std;

using namespace chrono;

#define int long long

mt19937_64 rng(time(0));

const int maxn=1e5+10;
const int mod=998244353;
const int logn=20;

int Mpos(vector<int>&a,int L,int R)
{
    int m=a[R];
    int i=L-1;
    /// site pomali od m kje gi stavime levo od m
    for(int j=L;j<R;j++)
    {
        if(a[j]<m)
        {
            i++;
            swap(a[i],a[j]);
        }
    }
    swap(a[i+1],a[R]);
    return i+1;
}

void qs(vector<int>&a,int L,int R)
{
    if(L<R)
    {
        int mid=Mpos(a,L,R);
        /// odi L->mid-1->(mid)->mid+1->R (go stavame najgolemiot kako mid i sortirame)
        qs(a,L,mid-1);
        qs(a,mid+1,R);
    }
}

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    vector<int>a(maxn);
    for(int i=0;i<maxn;i++)
    {
        a[i]=rng();
    }
    auto start = high_resolution_clock::now();
    qs(a,0,maxn-1);
    auto stop = high_resolution_clock::now();
    for(int i=0;i<maxn;i++)
    {
        cout<<a[i]<< " ";
    }
    cout<<endl;
    auto duration = duration_cast<microseconds>(stop - start);
    cout << "Time taken: " << duration.count() << " Âµs\n";
    return 0;
}
